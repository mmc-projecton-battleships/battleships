C51 COMPILER V9.55   BATTLESHIPS                                                           06/20/2019 01:31:26 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE BATTLESHIPS
OBJECT MODULE PLACED IN battleships.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.exe battleships.c DB OE BR INCDIR(C:\SiLabs\MCU\Inc)

line level    source

   1          //-----------------------------------------------------------------------------//
   2          //User_Interface_Functions.c
   3          //----------------------------------------------------------------------------
   4          //  Copyright (C) 2016 BRAUDE COLLEGE  
   5          //  Electronics & Elictrical Engineering Department
   6          //  All rights reserved.
   7          //  Owner               :  Dr. Fadil Tareef
   8          //  FILE NAME   :  User_Interface_Functions.c 
   9          //  DATE         :  23 DEC 2016
  10          //  TARGET MCU   :  C8051F020
  11          //  DESCRIPTION  :  This file contains LCD and KEPAD Interface Functions Implementation.
  12          //                                      P1 is used for the control signals, P1.0 = E, P1.1 = RW, P1.2 = RS, output only
  13          //                                      P2 is used for data: P2.7 is read to get the status of the LCD (BF)
  14          //                                      P2 must be configured as bidirectional (open-drain) 
  15          //                                      and set to FF (or at least 80) before reading the status of P2.7
  16          //                                      P3 is used for KEPAD interface.
  17          //                                      P3.0-P3.3 connected to the COLUMNS of the KEPAD, input pins.
  18          //                                      P3.4-P3.7 connected to the ROWS of the KEPAD, output pins.
  19          //                                
  20          //      NOTES: This file used in the LCD.c file.
  21          //                 This file updated for Keil C compiler and C8051F020.
  22          //-----------------------------------------------------------------------------
  23          
  24          //#include "C8051F020.h"                  // Include register definition file.
  25          #include "User_Interface_def.h"
  26          #include "battleships.h"
  27          //----------------------------- related Functions --------------------------------
  28          char recieved_note=0;
  29          
  30          void main()
  31          {
  32   1              char key=0;
  33   1              Init_Device();
  34   1              Init_LCD();
  35   1              while(1)
  36   1              {
  37   2                      PRESSED_KEY();
  38   2                      key = GET_KEY();        //save the key pressed
  39   2                      KEY_RELEASE();
  40   2                      LCD_BF();               //wait until releasing
  41   2                      if(key!=0) send_char(key);
  42   2                      key=0;
  43   2                      check_input();
  44   2                      if (recieved_note)
  45   2                      {
  46   3                              LCD_DAT(recieved_note);
  47   3                      }
  48   2                      recieved_note=0;
  49   2              }
  50   1              
  51   1      
  52   1      }
  53          
  54          void check_input()
  55          {
C51 COMPILER V9.55   BATTLESHIPS                                                           06/20/2019 01:31:26 PAGE 2   

  56   1              if (!RI0)
  57   1                      return;
  58   1              recieved_note = SBUF0;
  59   1              LCD_BF();               //wait until releasing
  60   1              LCD_DAT(recieved_note);
  61   1              LCD_BF();
  62   1              RI0=0;
  63   1      }
  64          void send_char(char c)
  65          {
  66   1              TI0 = 0;
  67   1              SBUF0=  c;
  68   1              while(!TI0);
  69   1              TI0= 0;
  70   1      }
  71          void delay(int secs)
  72          {
  73   1              int pu = secs/(6*10^(-6));
  74   1              int t0 = 0xFFFF-pu;
  75   1              TL0=(t0%(0xFF));
  76   1              TH0=(t0/(0xFF));
  77   1              TR0 = 1;        //START COUNTING
  78   1              while(!TF0);    //DELAY UNTIL OF
  79   1      }
  80          
  81          void Init_LCD()
  82          {
  83   1              LCD_BF(); // wait untill the LCD is no longer busy
  84   1              LCD_INIT();// initialize the LCD to 8 bit mode
  85   1              LCD_BF();// wait untill the LCD is no longer busy
  86   1              LCD_CMD(0x06); // curser moves from left to right
  87   1              LCD_BF();// wait untill the LCD is no longer busy
  88   1              LCD_CLRS(); // clears the display
  89   1              LCD_BF();// wait untill the LCD is no longer busy
  90   1              LCD_CMD(0x02);// move the cursor home
  91   1              LCD_BF();// wait untill the LCD is no longer busy
  92   1              
  93   1      }
  94          
  95          void start_screen()
  96          {
  97   1              LCD_CLRS(); // clears the display
  98   1              LCD_BF();// wait untill the LCD is no longer busy
  99   1              LCD_MSG("BattleShips!");
 100   1              LCD_BF();// wait untill the LCD is no longer busy
 101   1              delay(2);
 102   1              LCD_CLRS(); // clears the display
 103   1              LCD_BF();// wait untill the LCD is no longer busy
 104   1      }
 105          
 106          
 107          void switch_difficulty()
 108          {
 109   1              char key;
 110   1              LCD_CMD(0x02);// move the cursor home
 111   1              LCD_BF();// wait untill the LCD is no longer busy
 112   1              LCD_MSG("Please choose");
 113   1              LCD_BF();// wait untill the LCD is no longer busy
 114   1              LCD_GOTO(0x40);
 115   1              LCD_BF();// wait untill the LCD is no longer busy
 116   1              LCD_MSG("difficulty:");
 117   1              LCD_BF();// wait untill the LCD is no longer busy
C51 COMPILER V9.55   BATTLESHIPS                                                           06/20/2019 01:31:26 PAGE 3   

 118   1              PRESSED_KEY();  //wait until pressing
 119   1              key = GET_KEY();        //save the key pressed
 120   1              KEY_RELEASE();          //wait until releasing
 121   1              LCD_DAT(ASCII_CONV(key));
 122   1              LCD_BF();// wait untill the LCD is no longer busy
 123   1              delay(2);
 124   1              set_difficulty(key);
 125   1      }
 126          
 127          void set_difficulty(char difficulty)
 128          {
 129   1              switch (difficulty)
 130   1                {
 131   2                case '1': 
 132   2                      {
 133   3                              game_timer ="03:00";
 134   3                              miss_cnt = 25;
 135   3                              break;
 136   3                      }
 137   2                case '2':
 138   2                      {
 139   3                              game_timer = "02:00";
 140   3                              miss_cnt = 20;
 141   3                              break;
 142   3                      }
 143   2                case '3':
 144   2                      {
 145   3                              game_timer = "01:00";
 146   3                              miss_cnt = 15;
 147   3                              break;
 148   3                      }
 149   2                }
 150   1      }
 151          
 152          void counting_screen()
 153          {
 154   1              LCD_CLRS(); // clears the display
 155   1              LCD_BF();// wait untill the LCD is no longer busy
 156   1              LCD_MSG("3");
 157   1              LCD_BF();// wait untill the LCD is no longer busy
 158   1              delay(1);
 159   1              LCD_CLRS(); // clears the display
 160   1              LCD_BF();// wait untill the LCD is no longer busy
 161   1              LCD_MSG("2");
 162   1              LCD_BF();// wait untill the LCD is no longer busy
 163   1              delay(1);
 164   1              LCD_CLRS(); // clears the display
 165   1              LCD_BF();// wait untill the LCD is no longer busy
 166   1              LCD_MSG("1");
 167   1              LCD_BF();// wait untill the LCD is no longer busy
 168   1              delay(1);
 169   1              LCD_CLRS(); // clears the display
 170   1              LCD_BF();// wait untill the LCD is no longer busy
 171   1              LCD_MSG("GO!");
 172   1              LCD_BF();// wait untill the LCD is no longer busy
 173   1              delay(1);
 174   1              LCD_CLRS(); // clears the display
 175   1              LCD_BF();// wait untill the LCD is no longer busy
 176   1      }
 177          
 178          void Reset_isr() interrupt 0
 179          {
C51 COMPILER V9.55   BATTLESHIPS                                                           06/20/2019 01:31:26 PAGE 4   

 180   1              game_timer = "00:00";
 181   1              miss_cnt=0;
 182   1              TI0 = 0;
 183   1              SBUF0='R';
 184   1              Init_LCD();
 185   1              KEPAD_INIT();   // initialize the keypad
 186   1              start_screen();
 187   1              switch_difficulty();
 188   1              counting_screen();
 189   1              Main_loop();
 190   1      }
 191          
 192          /*
 193          void UART0_ISR(void) interrupt 4
 194          {
 195                  if (RI0==1)
 196                  {
 197                          char note;
 198                          note = SBUF0;
 199                          LCD_BF();               //wait until releasing
 200                          LCD_DAT(note);
 201                          LCD_BF();
 202                          RI0=0;
 203                  }
 204                  
 205          }*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    511    ----
   CONSTANT SIZE    =     73    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
