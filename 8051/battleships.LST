C51 COMPILER V9.55   BATTLESHIPS                                                           06/19/2019 18:25:32 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE BATTLESHIPS
OBJECT MODULE PLACED IN battleships.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.exe battleships.c DB OE BR INCDIR(C:\SiLabs\MCU\Inc)

line level    source

   1          //-----------------------------------------------------------------------------//
   2          //User_Interface_Functions.c
   3          //----------------------------------------------------------------------------
   4          //  Copyright (C) 2016 BRAUDE COLLEGE  
   5          //  Electronics & Elictrical Engineering Department
   6          //  All rights reserved.
   7          //  Owner               :  Dr. Fadil Tareef
   8          //  FILE NAME   :  User_Interface_Functions.c 
   9          //  DATE         :  23 DEC 2016
  10          //  TARGET MCU   :  C8051F020
  11          //  DESCRIPTION  :  This file contains LCD and KEPAD Interface Functions Implementation.
  12          //                                      P1 is used for the control signals, P1.0 = E, P1.1 = RW, P1.2 = RS, output only
  13          //                                      P2 is used for data: P2.7 is read to get the status of the LCD (BF)
  14          //                                      P2 must be configured as bidirectional (open-drain) 
  15          //                                      and set to FF (or at least 80) before reading the status of P2.7
  16          //                                      P3 is used for KEPAD interface.
  17          //                                      P3.0-P3.3 connected to the COLUMNS of the KEPAD, input pins.
  18          //                                      P3.4-P3.7 connected to the ROWS of the KEPAD, output pins.
  19          //                                
  20          //      NOTES: This file used in the LCD.c file.
  21          //                 This file updated for Keil C compiler and C8051F020.
  22          //-----------------------------------------------------------------------------
  23          
  24          //#include "C8051F020.h"                  // Include register definition file.
  25          #include "User_Interface_def.h"
  26          #include "battleships.h"
  27          //----------------------------- related Functions --------------------------------
  28          char* game_timer ="00:00";
  29          int     miss_cnt = 0;
  30          
  31          void delay(int secs)
  32          {
  33   1              int pu = secs/(6*10^(-6));
  34   1              int t0 = 0xFFFF-pu;
  35   1              TL0=(t0%(0xFF));
  36   1              TH0=(t0/(0xFF));
  37   1              TR0 = 1;        //START COUNTING
  38   1              while(!TF0);    //DELAY UNTIL OF
  39   1      }
  40          
  41          void Init_LCD()
  42          {
  43   1              LCD_BF(); // wait untill the LCD is no longer busy
  44   1              LCD_INIT();// initialize the LCD to 8 bit mode
  45   1              LCD_BF();// wait untill the LCD is no longer busy
  46   1              LCD_CMD(0x06); // curser moves from left to right
  47   1              LCD_BF();// wait untill the LCD is no longer busy
  48   1              LCD_CLRS(); // clears the display
  49   1              LCD_BF();// wait untill the LCD is no longer busy
  50   1              LCD_CMD(0x02);// move the cursor home
  51   1              LCD_BF();// wait untill the LCD is no longer busy
  52   1              
  53   1      }
  54          
  55          void start_screen()
C51 COMPILER V9.55   BATTLESHIPS                                                           06/19/2019 18:25:32 PAGE 2   

  56          {
  57   1              LCD_CLRS(); // clears the display
  58   1              LCD_BF();// wait untill the LCD is no longer busy
  59   1              LCD_MSG("BattleShips!");
  60   1              LCD_BF();// wait untill the LCD is no longer busy
  61   1              delay(2);
  62   1              LCD_CLRS(); // clears the display
  63   1              LCD_BF();// wait untill the LCD is no longer busy
  64   1      }
  65          
  66          
  67          void switch_difficulty()
  68          {
  69   1              char key;
  70   1              LCD_CMD(0x02);// move the cursor home
  71   1              LCD_BF();// wait untill the LCD is no longer busy
  72   1              LCD_MSG("Please choose");
  73   1              LCD_BF();// wait untill the LCD is no longer busy
  74   1              LCD_GOTO(0x40);
  75   1              LCD_BF();// wait untill the LCD is no longer busy
  76   1              LCD_MSG("difficulty:");
  77   1              LCD_BF();// wait untill the LCD is no longer busy
  78   1              PRESSED_KEY();  //wait until pressing
  79   1              key = GET_KEY();        //save the key pressed
  80   1              KEY_RELEASE();          //wait until releasing
  81   1              LCD_DAT(ASCII_CONV(key));
  82   1              LCD_BF();// wait untill the LCD is no longer busy
  83   1              delay(2);
  84   1              set_difficulty(key);
  85   1      }
  86          
  87          void set_difficulty(char difficulty)
  88          {
  89   1              switch (difficulty)
  90   1                {
  91   2                case '1': 
  92   2                      {
  93   3                              game_timer ="03:00";
  94   3                              miss_cnt = 25;
  95   3                              break;
  96   3                      }
  97   2                case '2':
  98   2                      {
  99   3                              game_timer = "02:00";
 100   3                              miss_cnt = 20;
 101   3                              break;
 102   3                      }
 103   2                case '3':
 104   2                      {
 105   3                              game_timer = "01:00";
 106   3                              miss_cnt = 15;
 107   3                              break;
 108   3                      }
 109   2                }
 110   1      }
 111          
 112          void counting_screen()
 113          {
 114   1              LCD_CLRS(); // clears the display
 115   1              LCD_BF();// wait untill the LCD is no longer busy
 116   1              LCD_MSG("3");
 117   1              LCD_BF();// wait untill the LCD is no longer busy
C51 COMPILER V9.55   BATTLESHIPS                                                           06/19/2019 18:25:32 PAGE 3   

 118   1              delay(1);
 119   1              LCD_CLRS(); // clears the display
 120   1              LCD_BF();// wait untill the LCD is no longer busy
 121   1              LCD_MSG("2");
 122   1              LCD_BF();// wait untill the LCD is no longer busy
 123   1              delay(1);
 124   1              LCD_CLRS(); // clears the display
 125   1              LCD_BF();// wait untill the LCD is no longer busy
 126   1              LCD_MSG("1");
 127   1              LCD_BF();// wait untill the LCD is no longer busy
 128   1              delay(1);
 129   1              LCD_CLRS(); // clears the display
 130   1              LCD_BF();// wait untill the LCD is no longer busy
 131   1              LCD_MSG("GO!");
 132   1              LCD_BF();// wait untill the LCD is no longer busy
 133   1              delay(1);
 134   1              LCD_CLRS(); // clears the display
 135   1              LCD_BF();// wait untill the LCD is no longer busy
 136   1      }
 137          
 138          void Reset_isr() interrupt 0
 139          {
 140   1              game_timer = "00:00";
 141   1              miss_cnt=0;
 142   1              TI0 = 0;
 143   1              SBUF0='R';
 144   1              Init_LCD();
 145   1              KEPAD_INIT();   // initialize the keypad
 146   1              start_screen();
 147   1              switch_difficulty();
 148   1              counting_screen();
 149   1              Main_loop();
 150   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    431    ----
   CONSTANT SIZE    =     73    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
